// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: serialization/gogoproto.proto

package serialization

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type StructProtobuf2 struct {
	Ts  int64  `protobuf:"varint,1,req,name=Ts" json:"Ts"`
	Tag string `protobuf:"bytes,2,req,name=Tag" json:"Tag"`
}

func (m *StructProtobuf2) Reset()         { *m = StructProtobuf2{} }
func (m *StructProtobuf2) String() string { return proto.CompactTextString(m) }
func (*StructProtobuf2) ProtoMessage()    {}
func (*StructProtobuf2) Descriptor() ([]byte, []int) {
	return fileDescriptor_78c65b79cedae91a, []int{0}
}
func (m *StructProtobuf2) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StructProtobuf2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StructProtobuf2.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StructProtobuf2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructProtobuf2.Merge(m, src)
}
func (m *StructProtobuf2) XXX_Size() int {
	return m.Size()
}
func (m *StructProtobuf2) XXX_DiscardUnknown() {
	xxx_messageInfo_StructProtobuf2.DiscardUnknown(m)
}

var xxx_messageInfo_StructProtobuf2 proto.InternalMessageInfo

func (m *StructProtobuf2) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *StructProtobuf2) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func init() {
	proto.RegisterType((*StructProtobuf2)(nil), "serialization.StructProtobuf2")
}

func init() { proto.RegisterFile("serialization/gogoproto.proto", fileDescriptor_78c65b79cedae91a) }

var fileDescriptor_78c65b79cedae91a = []byte{
	// 162 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2d, 0x4e, 0x2d, 0xca,
	0x4c, 0xcc, 0xc9, 0xac, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x4f, 0xcf, 0x4f, 0xcf, 0x2f, 0x28,
	0xca, 0x2f, 0xc9, 0xd7, 0x03, 0x93, 0x42, 0xbc, 0x28, 0xd2, 0x52, 0xba, 0xe9, 0x99, 0x25, 0x19,
	0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0x60, 0xa5, 0xfa, 0x60, 0x55, 0x49, 0xa5, 0x69, 0x08, 0x8d,
	0x60, 0x16, 0x44, 0xb7, 0x92, 0x3d, 0x17, 0x7f, 0x70, 0x49, 0x51, 0x69, 0x72, 0x49, 0x00, 0x54,
	0x99, 0x91, 0x90, 0x08, 0x17, 0x53, 0x48, 0xb1, 0x04, 0xa3, 0x02, 0x93, 0x06, 0xb3, 0x13, 0xcb,
	0x89, 0x7b, 0xf2, 0x0c, 0x41, 0x4c, 0x21, 0xc5, 0x42, 0x62, 0x5c, 0xcc, 0x21, 0x89, 0xe9, 0x12,
	0x4c, 0x0a, 0x4c, 0x1a, 0x9c, 0x50, 0x61, 0x90, 0x80, 0x93, 0xc4, 0x89, 0x47, 0x72, 0x8c, 0x17,
	0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe1, 0xb1, 0x1c, 0xc3, 0x85, 0xc7, 0x72, 0x0c,
	0x37, 0x1e, 0xcb, 0x31, 0x00, 0x02, 0x00, 0x00, 0xff, 0xff, 0x31, 0xf5, 0x43, 0x20, 0xb8, 0x00,
	0x00, 0x00,
}

func (m *StructProtobuf2) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StructProtobuf2) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintGogoproto(dAtA, i, uint64(m.Ts))
	dAtA[i] = 0x12
	i++
	i = encodeVarintGogoproto(dAtA, i, uint64(len(m.Tag)))
	i += copy(dAtA[i:], m.Tag)
	return i, nil
}

func encodeVarintGogoproto(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *StructProtobuf2) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovGogoproto(uint64(m.Ts))
	l = len(m.Tag)
	n += 1 + l + sovGogoproto(uint64(l))
	return n
}

func sovGogoproto(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozGogoproto(x uint64) (n int) {
	return sovGogoproto(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *StructProtobuf2) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGogoproto
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StructProtobuf2: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StructProtobuf2: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ts", wireType)
			}
			m.Ts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGogoproto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Ts |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGogoproto
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGogoproto
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGogoproto
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tag = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipGogoproto(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGogoproto
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGogoproto
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Ts")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Tag")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGogoproto(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGogoproto
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGogoproto
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGogoproto
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGogoproto
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthGogoproto
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowGogoproto
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipGogoproto(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthGogoproto
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthGogoproto = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGogoproto   = fmt.Errorf("proto: integer overflow")
)
